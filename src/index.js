import "./style.css"; // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∏–ª–∏
import QRCode from "qrcode";

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL API
const apiUrl = process.env.API_URL;

let userNameInput = ""; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
let currentPrompt = ""; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
let currentPoem = ""; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏—è
let currentPoemStyle = ""; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∏–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏—è
let poemArray = []; // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏–π

// –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç—ã DOM
const nameSection = document.getElementById("nameSection");
const userName = document.getElementById("userName");
const saveBtn = document.getElementById("saveBtn");
const poetrySection = document.getElementById("poetrySection");
const greeting = document.getElementById("greeting");
const poetryForm = document.getElementById("poetryForm");
const poetryFormContainer = document.querySelector(".poetry-form-container");
const prompt = document.getElementById("prompt");
const storyOutput = document.getElementById("storyOutput");
const tellStoryBtn = document.getElementById("tellStory");
const finishBtn = document.getElementById("finishBtn");

document.addEventListener("DOMContentLoaded", () => {
  const tooltip = document.querySelector(".tooltip");
  const tooltipText = tooltip.querySelector(".tooltiptext");

  tooltip.addEventListener("click", (event) => {
    tooltipText.classList.toggle("show"); // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –æ–∫–Ω–∞
    event.stopPropagation(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –∫–ª–∏–∫–∞
  });

  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ –∏ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–≤–µ—Ä—Ö
  document.addEventListener("click", (event) => {
    if (!tooltip.contains(event.target)) {
      tooltipText.classList.remove("show");

      // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–≤–µ—Ä—Ö
      document.body.scrollTop = 0; // –î–ª—è Safari
      document.documentElement.scrollTop = 0; // –î–ª—è Chrome, Firefox, IE –∏ Opera
    }
  });

  // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Å focusout
  tooltip.addEventListener("focusout", () => {
    tooltipText.classList.remove("show");

    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–≤–µ—Ä—Ö
    document.body.scrollTop = 0; // –î–ª—è Safari
    document.documentElement.scrollTop = 0; // –î–ª—è Chrome, Firefox, IE –∏ Opera
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏
saveBtn.addEventListener("click", () => {
  console.log("saveBtn pressed");
  userNameInput = userName.value;
  console.log(userNameInput);
  if (userNameInput) {
    // –ü–ª–∞–≤–Ω–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —Å–µ–∫—Ü–∏–∏ nameSection
    nameSection.classList.remove("show");
    nameSection.classList.add("hide");
    poetryForm.value = ""; // –°–±—Ä–æ—Å –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–æ—Ä–º—ã

    setTimeout(() => {
      nameSection.style.display = "none"; // –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–∫—Ä—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏—é –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
      nameSection.classList.remove("hide");

      // –ü–ª–∞–≤–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ poetrySection
      poetrySection.style.display = "block";
      setTimeout(() => {
        poetrySection.classList.add("show"); // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è –ø–æ–∫–∞–∑–∞
      }, 10); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è display: block

      greeting.innerHTML = `Dear ${userNameInput},<br>Share your story with me üëÇ... <br>and I'll weave it into the fabric of poetry.`;
    }, 500); // –í—Ä–µ–º—è –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –∞–Ω–∏–º–∞—Ü–∏–∏ (0.5s –≤ CSS)
  }
});

tellStoryBtn?.addEventListener("click", async () => {
  if (poetryForm.value === "" || prompt.value === "") {
    storyOutput.innerText = "Please enter a prompt and select a poetry form.";
    return;
  }
  if (
    currentPrompt !== "" &&
    currentPoemStyle !== "" &&
    currentPrompt === prompt.value &&
    currentPoemStyle === poetryForm.value
  ) {
    // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–º–ø—Ç –∏ —Å—Ç–∏–ª—å —Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏—è —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å –Ω–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ - –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    storyOutput.innerText =
      "Change the prompt or poetry form to generate a new poem.";
    return;
  }
  if (currentPoem !== "" && currentPoemStyle !== "" && currentPrompt !== "") {
    poemArray.push({
      text: currentPoem,
      style: currentPoemStyle,
      prompt: currentPrompt,
    });
    currentPoem = "";
    currentPoemStyle = "";
    currentPrompt = "";
  }
  currentPoemStyle = poetryForm.value;
  currentPrompt = prompt.value;
  if (currentPrompt && currentPoemStyle && storyOutput) {
    storyOutput.innerText = "Generating your poem...";

    try {
      const response = await fetch(`${apiUrl}/api/get-poem`, {
        // –ü–æ–ª–Ω—ã–π URL —Å –ø–æ—Ä—Ç–æ–º
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          promptInput: currentPrompt,
          poetryChoice: currentPoemStyle,
        }),
      });

      if (!response.ok) {
        throw new Error("Network response was not ok");
      }

      const data = await response.json();
      if (data.error) {
        throw new Error(data.error);
      }
      if (data.content) {
        // If data.content exists - save it to array of poems
        currentPoem = data.content;
      }
      storyOutput.innerText = data.content || "Sorry, no response generated.";
    } catch (error) {
      storyOutput.innerText = "Sorry, something went wrong. Please try again.";
      console.error("Error:", error);
    }
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
finishBtn?.addEventListener("click", async () => {
  if (currentPoem !== "" && currentPoemStyle !== "" && currentPrompt !== "") {
    poemArray.push({
      text: currentPoem,
      style: currentPoemStyle,
      prompt: currentPrompt,
    });
    currentPoem = "";
    currentPoemStyle = "";
    currentPrompt = "";
  }

  if (userNameInput && poemArray.length > 0) {
    try {
      const response = await fetch(`${apiUrl}/api/save-poems`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          userName: userNameInput,
          poems: poemArray,
        }),
      });

      if (!response.ok) {
        throw new Error("Failed to save poems to database.");
      }

      const result = await response.json();
      console.log("Poems saved successfully:", result);

      // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è URL –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø–æ—ç–º–∞–º–∏
      const poemsPageUrl = `${apiUrl}/api/poems/${result._id}`;

      // –ó–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é QR-–∫–æ–¥–∞
      const qrCodeResponse = await fetch(
        `${apiUrl}/api/generate-qr/${result._id}`
      );
      const qrCodeData = await qrCodeResponse.json();

      if (qrCodeData.qrCode) {
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞
        const popup = document.createElement("div");
        popup.style.position = "fixed";
        popup.style.top = "50%";
        popup.style.left = "50%";
        popup.style.transform = "translate(-50%, -50%)";
        popup.style.padding = "20px";
        popup.style.backgroundColor = "#fff";
        popup.style.border = "1px solid #ccc";
        popup.style.boxShadow = "0 4px 15px rgba(0, 0, 0, 0.1)";
        popup.style.borderRadius = "10px";
        popup.style.zIndex = "1000";
        popup.style.textAlign = "center";
        popup.style.maxWidth = "90%";
        popup.style.width = "400px";
        popup.style.boxSizing = "border-box";

        popup.innerHTML = `
           <h2 style="font-size: 1.5rem; margin-bottom: 1rem;">Scan this QR code to view your poems:</h2>
           <img src="${qrCodeData.qrCode}" alt="QR Code" style="margin-bottom: 1rem;">
           <p><strong>Or visit this URL:</strong> <br><br><a href="${poemsPageUrl}" target="_blank" style="color: #007bff; text-decoration: none;">Your page with poems</a></p>
           <button id="closePopup" style="margin-top: 1rem; padding: 10px 20px; background-color: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer;">Close</button>
         `;

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞
        document.body.appendChild(popup);
        document.getElementById("closePopup").addEventListener("click", () => {
          document.body.removeChild(popup);
        });
      }
      // –û—á–∏—Å—Ç–∫–∞ –º–∞—Å—Å–∏–≤–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
      poemArray = [];
      userNameInput = "";
    } catch (error) {
      console.error("Error:", error);
    }
  }

  // –ü–ª–∞–≤–Ω–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —Å–µ–∫—Ü–∏–∏ poetrySection
  poetrySection.classList.remove("show");
  poetrySection.classList.add("hide");

  setTimeout(() => {
    poetrySection.style.display = "none"; // –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–∫—Ä—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏—é –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
    poetrySection.classList.remove("hide");

    // –ü–ª–∞–≤–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ nameSection
    nameSection.style.display = "block";
    setTimeout(() => {
      nameSection.classList.add("show"); // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è –ø–æ–∫–∞–∑–∞
    }, 10); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è display: block

    // –°–±—Ä–æ—Å –∑–Ω–∞—á–µ–Ω–∏–π
    userName.value = "";
    prompt.value = "";
    storyOutput.innerText = "";
    poetryForm.value = "";
  }, 500); // –í—Ä–µ–º—è –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –∞–Ω–∏–º–∞—Ü–∏–∏ (0.5s –≤ CSS)
});
